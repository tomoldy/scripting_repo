(*
# Logout
Methods to interact with the logout tab.
*)
{$DEFINE SRL_LOGOUT_INCLUDED}
{$IFNDEF SRL_OSR}
  {$I SRL-T/osr.simba}
{$ENDIF}

type
  ERSLogoutButton = (WORLD_SWITCHER, CLICK_HERE);
  ERSLogoutWorldSwitcherButton = (CLOSE);
  TRSLogout = type TRSInterface;

procedure TRSLogout.Setup(); override;
begin
  inherited;
  Self.Name := 'Logout';
end;

procedure TRSLogout.SetupAlignment(); overload;
var
  alignment: TRSInterfaceAlignment;
begin 
  alignment.Left := GameTab.Bounds.X1 - 3;
  alignment.Right := GameTab.Bounds.X2 + 3;
  alignment.Top := GameTab.Bounds.Y1;
  alignment.Bottom := GameTab.Bounds.Y2;
  Self.SetupAlignment(alignment);
end;

(*
## Logout.IsOpen
```pascal
function TRSLogout.IsOpen(): Boolean;
```
Returns true if the logout gametab is open, false if it's not.

Example:
```pascal
WriteLn Logout.IsOpen();
```
*)
function TRSLogout.IsOpen(): Boolean;
begin
  Result := (GameTabs.GetCurrentTab() = ERSGameTab.LOGOUT);
end;

(*
## Logout.Open
```pascal
function TRSLogout.Open(): Boolean;
```
Attempts to open the logout tab, returns true if it succeeds.

Example:
```pascal
WriteLn Logout.Open();
```
*)
function TRSLogout.Open(): Boolean;
begin
  Result := GameTabs.Open(ERSGameTab.LOGOUT);
end;

(*
## Logout.GetButtons
```pascal
function TRSLogout.GetButtons(): TRSButtonArray;
```
Returns the logout and world switcher buttons.

Example:
```pascal
Debug(Logout.GetButtons());
```
*)
function TRSLogout.GetButtons(): TRSButtonArray;
begin
  Result := Self.FindButtons([[138, 30], [21, 21]]);
end;

(*
## Logout.GetButton
```pascal
function TRSLogout.GetButton(button: ERSLogoutButton): TRSButton;
```
Returns a logout button.

Example:
```pascal
Debug([Logout.GetButton(ERSLogoutButton.CLICK_HERE)]);
```
*)
function TRSLogout.GetButton(button: ERSLogoutButton): TRSButton;
var
  buttons: TRSButtonArray;
begin
  buttons := Self.GetButtons();
  if Length(buttons) = Length(ERSLogoutButton) then
    Result := buttons[button];
end;


(*
## Logout.GetStarButtons
```pascal
function TRSLogout.GetStarButtons(): TRSButtonArray;
```
Returns the rating star buttons.

Example:
```pascal
Debug(Logout.GetStarButtons());
```
*)
function TRSLogout.GetStarButtons(): TRSButtonArray;
begin
  Result := Self.FindButtons([[30, 34]]);
end;

(*
## Logout.GetStarButton
```pascal
function TRSLogout.GetStarButton(star: Int32): TRSButton;
```
Returns a star button.

Example:
```pascal
Debug([Logout.GetStarButton(3)]);
```
*)
function TRSLogout.GetStarButton(star: Int32): TRSButton;
var
  buttons: TRSButtonArray;
begin
  if not InRange(star, 1, 5) then RaiseException('You can only rate the game between 1 and 5.');
  buttons := Self.GetStarButtons();
  if Length(buttons) <> 5 then Exit;
  Result := buttons[star-1];
end;


(*
## Logout.IsRated
```pascal
function TRSLogout.IsRated(): Boolean;
```
Returns true if a star button was clicked.

Example:
```pascal
WriteLn Logout.IsRated();
```
*)
function TRSLogout.IsRated(): Boolean;
var
  button: TRSButton;
begin
  button := Self.GetStarButton(1);
  if button = [] then Exit;
  Result := button.Enabled();
end;


(*
## Logout.GetWorldSwitcherButtons
```pascal
function TRSLogout.GetWorldSwitcherButtons(): TRSButtonArray;
```
Returns world switcher buttons.

Example:
```pascal
Debug(Logout.GetWorldSwitcherButtons());
```
*)
function TRSLogout.GetWorldSwitcherButtons(): TRSButtonArray;
begin
  Result := Self.FindButtons([[21, 21]]);
end;

(*
## Logout.GetWorldSwitcherButton
```pascal
function TRSLogout.GetWorldSwitcherButton(button: ERSLogoutWorldSwitcherButton): TRSButton;
```
Returns a world switcher button.

Example:
```pascal
Debug([Logout.GetWorldSwitcherButton(ERSLogoutWorldSwitcherButton.CLOSE)]);
```
*)
function TRSLogout.GetWorldSwitcherButton(button: ERSLogoutWorldSwitcherButton): TRSButton;
var
  Buttons: TRSButtonArray := Self.GetWorldSwitcherButtons();
begin
  if Length(Buttons) = Length(ERSLogoutWorldSwitcherButton) then
    Result := Buttons[Button];
end;


(*
## Logout.IsWorldSwitcherOpen
```pascal
function TRSLogout.IsWorldSwitcherOpen(): Boolean;
```
Returns true if the world switcher is open.

Example:
```pascal
WriteLn Logout.IsWorldSwitcherOpen();
```
*)
function TRSLogout.IsWorldSwitcherOpen(): Boolean;
begin
  Result := Self.IsOpen() and Self.GetWorldSwitcherButton(ERSLogoutWorldSwitcherButton.CLOSE).Visible();
end;

(*
## Logout.CloseWorldSwitcher
```pascal
function TRSLogout.CloseWorldSwitcher(): Boolean;
```
Closes the world switcher.

Example:
```pascal
Logout.CloseWorldSwitcher();
```
*)
function TRSLogout.CloseWorldSwitcher(): Boolean;
begin
  if Self.IsOpen() and (not Self.IsWorldSwitcherOpen()) then
    Exit(True);
  
  Result := Self.GetWorldSwitcherButton(ERSLogoutWorldSwitcherButton.CLOSE).Click() and WaitUntil(not Self.IsWorldSwitcherOpen(), 500, 5000);
end;


(*
## Logout.ClickLogout
```pascal
function TRSLogout.ClickLogout(attempts: Int32 = 5; time: Int32 = 20000): Boolean;
```
Clicks the logout button. Returns true if we succesfully logout of the game.

Example:
```pascal
WriteLn Logout.ClickLogout();
```
*)
function TRSLogout.ClickLogout(attempts: Int32 = 5; time: Int32 = 20000): Boolean;
var
  i: Int32;
  interval: UInt64;
begin
  if (not Self.Open()) or (not Self.CloseWorldSwitcher()) then
    Exit;

  interval := time div attempts;

  for i := 1 to attempts do
    if Self.GetButton(ERSLogoutButton.CLICK_HERE).Click() and WaitUntil(not RSClient.IsLoggedIn(), 500, Interval + SRL.NormalRange(-2000, 2000)) then 
      Exit(True);
end;

var
(*
## var Logout
Global TRSLogout variable.
*)
  Logout: TRSLogout;

procedure TRSClient.ClientModeChanged(); override;
begin
  inherited;
  Logout.SetupAlignment();
end;

procedure TSRL.Setup(); override;
begin
  inherited;

  Logout.Setup();
end;

procedure TSRL.Debug(bitmap: TMufasaBitmap); override;
begin
  inherited;

  Logout.Draw(bitmap);
end;
