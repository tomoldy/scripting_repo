{$DEFINE RELD_ANNETTESNETS_INCLUDED}
{$IFNDEF WL_OSR}
  {$I WaspLib/osr.simba}
{$ENDIF}

type

  TRSAnnettesNets = record(TRSTitledInterface)
    Items: TRSItemInterface;
  end;

function TRSAnnettesNets.GetSlotBoxes(): TBoxArray;
begin
  Result := [Box(Self.Bounds.X1 + 134, Self.Bounds.Y1 + 95, Self.Bounds.X2 - 39, Self.Bounds.Y2 - 35)];
end;

procedure TRSAnnettesNets.Setup(); override;
begin
  inherited;

  Self.Name := "Annette's Nets";
  Self.Items.DiscoverOffset := Box(0, 9, 0, 0);
  Self.Items.SlotBoxesFunction := @Self.GetSlotBoxes;
end;

procedure TRSAnnettesNets.SetupAlignment(); overload;
var
  alignment: TRSInterfaceAlignment;
begin
  alignment.Left := InterfaceArea.Bounds.X1;
  alignment.Right := InterfaceArea.Bounds.X2;
  alignment.Bottom := InterfaceArea.Bounds.Y2;
  alignment.MaxWidth := 204;
  alignment.MaxHeight := 160;

  case RSClient.Mode of
    ERSClientMode.FIXED:
      alignment.Top := InterfaceArea.Bounds.Y1;

    ERSClientMode.RESIZABLE_CLASSIC, ERSClientMode.RESIZABLE_MODERN:
      alignment.Top := InterfaceArea.Bounds.Y1-1;
  end;

  Self.SetupAlignment(alignment);
end;

function TRSAnnettesNets.IsOpen(): Boolean;
begin
  Result := Self.IsTitle(Self.Name);
end;

function TRSAnnettesNets.IsOpen(waitTime: Int32): Boolean; overload;
begin
  Result := WaitUntil(Self.IsOpen(), SRL.TruncatedGauss(50, 1500), waitTime);
end;

function TRSAnnettesNets.Close(pressEscape: Boolean = False): Boolean;
begin
  if not Self.IsOpen() then
    Exit(True);

  Result := Self.ClickCloseButton(pressEscape) and WaitUntil(not Self.IsOpen(), SRL.TruncatedGauss(50, 1500), Random(1500, 2000));
end;


var
 AnnettesNets : TRSAnnettesNets;

procedure TRSClient.ClientModeChanged(); override;
begin
  inherited;

  AnnettesNets.SetupAlignment();
end;

procedure TSRL.Setup(); override;
begin
  inherited;

  AnnettesNets.Setup();
end;
