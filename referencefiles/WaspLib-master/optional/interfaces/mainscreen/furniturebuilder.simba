(*
# FurnitureBuilder
Methods to interact with the FurnitureBuilder interface.

UNFINISHED! AND NOT WORKING!
*)

{$DEFINE WL_FURNITUREBUILDER_INCLUDED}
{$IFNDEF WL_OSR}
  {$I WaspLib/osr.simba}
{$ENDIF}

type
  TRSFurnitureBuilder = type TRSTitledInterface;

(*
## FurnitureBuilder.IsOpen
```pascal
function TRSFurnitureBuilder.IsOpen(WaitForItems: Boolean = True): Boolean;
```

Returns true if the FurnitureBuilder is visible.

**WaitForItems** determines if the method waits 1-2 seconds items to load as there
can be a small delay before items are visible.
*)
function TRSFurnitureBuilder.IsOpen(): Boolean;
begin
  Result := False;
end;



function TRSFurnitureBuilder.IsOpen(WaitTime: Int32; Interval: Int32 = -1): Boolean; overload;
begin
  if (Interval = -1) then
    Interval := SRL.TruncatedGauss(50, 1500);

  Result := WaitUntil(Self.IsOpen(), Interval, WaitTime);
end;

procedure TRSFurnitureBuilder.Draw(Bitmap: TMufasaBitmap); override;
begin
  if not Self.IsOpen() then
    Exit;

  inherited;
  // Add stuff here
end;

(*
## FurnitureBuilder.Setup
```pascal
procedure FurnitureBuilder.Setup;
```

Initializes FurnitureBuilder variables.

```{note}
This is automatically called on the **FurnitureBuilder** variable.
```
*)
procedure TRSFurnitureBuilder.Setup(); override;
begin
  inherited;
  Self.Name := 'FurnitureBuilder';
end;

procedure TRSFurnitureBuilder.SetupAlignment(); overload;
var
  alignment: TRSInterfaceAlignment;
begin
  alignment.Left := InterfaceArea.Bounds.X1;
  alignment.Right := InterfaceArea.Bounds.X2;
  alignment.Top := InterfaceArea.Bounds.Y1 + 2;
  alignment.MaxWidth := 488;
  alignment.MaxHeight := 800;

  case RSClient.Mode of
    ERSClientMode.FIXED:
      alignment.Bottom := InterfaceArea.Bounds.Y2 - 1;
    ERSClientMode.RESIZABLE_CLASSIC, ERSClientMode.RESIZABLE_MODERN:
      alignment.Bottom := InterfaceArea.Bounds.Y2 - 2;
  end;

  Self.SetupAlignment(alignment);
end;



(*
## FurnitureBuilder.Close
```pascal
function TRSFurnitureBuilder.Close(UseKeyboard: Boolean = False): Boolean;
```

Closes the furniture builder, Depending on `UseKeyboard` the function will either click the button
or press backspace.

Example:
```pascal
 WriteLn FurnitureBuilder.Close();
```
*)
function TRSFurnitureBuilder.Close(UseKeyboard: Boolean = False): Boolean;
begin
  Result := Self.ClickCloseButton(UseKeyboard) and WaitUntil(not Self.IsOpen(), SRL.TruncatedGauss(50, 1500), Random(1500, 2000));
end;


(*
## var FurnitureBuilder
  Global FurnitureBuilder variable.
*)
var
  FurnitureBuilder: TRSFurnitureBuilder;



procedure TRSClient.ClientModeChanged(); override;
begin
  inherited;
  FurnitureBuilder.SetupAlignment();
end;

procedure TSRL.Setup(); override;
begin
  inherited;
  FurnitureBuilder.Setup();
end;

procedure TSRL.Debug(bitmap: TMufasaBitmap); override;
begin
  inherited;
  FurnitureBuilder.Draw(bitmap);
end;

