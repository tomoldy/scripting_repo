(*
# Logout
Extends SRL's TRSLogout.
*)

{$DEFINE WL_LOGOUT_INCLUDED}
{$IFNDEF WL_OSR}
  {$I WaspLib/osr.simba}
{$ENDIF}

procedure TRSLogout.ClearEnter();
begin
  if Keyboard.LastKey <> VK_RETURN then Exit;
  Antiban.RandomKeyboard();
end;

(*
## Logout.ClickLogout
```pascal
function TRSLogout.ClickLogout(attempts: Int32 = 5; time: Int32 = 20000): Boolean; override;
```
Clicks the logout button. Returns true if we succesfully logout of the game.
Depending on the account biohash it might use the start buttons to rate the game.

Example:
```pascal
WriteLn Logout.ClickLogout();
```
*)
function TRSLogout.ClickLogout(attempts: Int32 = 5; tryTime: Int32 = 20000): Boolean; override;
var
  interval: UInt64;
  i: Int32;
begin
  if (not Self.Open()) or (not Self.CloseWorldSwitcher()) then
    Exit;

  interval := tryTime div attempts;

  if Antiban.BioDice(EBioBehavior.USES_STAR_BUTTONS) then
  begin
    if Antiban.BioDice(EBioBehavior.TENDS_TO_LIKE) then
      i := Round(SRL.TruncatedGauss(5, 1))
    else
      i := Round(SRL.TruncatedGauss(1, 5));

    Self.DebugLn('Rating the game with ' + ToStr(i) + ' stars before logging out.');
    Self.GetStarButton(i).Enable();
  end;

  for i := 1 to attempts do
  begin
    Self.ClearEnter();
    if Self.GetButton(ERSLogoutButton.CLICK_HERE).Click() and WaitUntil(not RSClient.IsLoggedIn(), 500, Interval + SRL.NormalRange(-2000, 2000)) then
      Exit(True);
  end;
end;
