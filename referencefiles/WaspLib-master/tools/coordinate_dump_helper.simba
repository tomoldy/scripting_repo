{$DEFINE SRL_DISABLE_REMOTEINPUT}
{$I SRL-T/osr.simba}
{$I WaspLib/osr.simba}

const
  OBJECT_NAMES: TStringArray = [
    'OakTree', 'WillowTree', 'TeakTree', 	'MapleTree', 'MahoganyTree',
    'YewTree', 'MagicTree',

		'CopperRock', 'TinRock', 'ClayRock', 'IronRock', 'CoalRock',
		'SilverRock', 'GoldRock', 'MithrilRock', 'AdamantiteRock', 'RuniteRock',
		'GemRock',

		'DepositBox', 'DepositBox (chest)', 'DepositBox (wood)', 'DepositBox (WT)',
    'Anvil',

		'BankUnspecified', 'BankChestUnspecified',

		'Bank booths (varrock, farm guild)',
		'Bank booths (falador)',
		'Bank booths (grand tree, ardy, alkharid, draynor, edgeville)',
		'Bank booths (seers, hosidius)',

		'Bank chest (portkharzard, duel arena, castle wars, rogues den, mlm)',
		'Bank chest (fossil island)',
    'Bank chest (craft guild, BA, unkah, wc guild)',

		'Bank chest (wood, ferox, farm guild)',
		'Hosidius kitchen',
		'Sand crabs chest',
		'North lovakengj chest',
		'Bank chest (wintertodt)',
		'Bank chest (raids1)',
		'Bank chest (lumbridge cellar)',
		'Bank chest (soulwars)',

		'Forgot???',

		'Spirit tree1', 'Spirit tree2', 'Fairy ring'
  ];

  RGB_COLOR_ARRAY: TIntegerArray = [
    $00FF11, $00FF22, $00FF33, $00FF44, $00FF55,
		$00FF66, $00FF77, $00FF88, $00FF99, $00FFAA,
		$00FFBB, $00FFCC, $00FFDD, $00FFEE, $00FFFF,

		$FFFF11, $FFFF22, $FFFF33, $FFFF44, $FFFF55,
		$FFFF66, $FFFF77, $FFFF88, $FFFF99, $FFFFAA,
		$FFFFBB, $FFFFCC, $FFFFDD, $FFFFEE, $FFFFFF,

		$FF0011, $FF0022, $FF0033, $FF0044, $FF0055,
		$FF0066, $FF0077, $FF0088, $FF0099, $FF00AA,
		$FF00BB, $FF00CC, $FF00DD, $FF00EE//, $FF00FF
  ];

var
  c, i: Int32;
  bgrArray: TIntegerArray;
  bitmap: TMufasaBitmap;
  tpa: TPointArray;
  atpa: T2DPointArray;
  path: String;
begin
  ClearDebug();
  for c in RGB_COLOR_ARRAY do
    bgrArray += RGB2BGR(c);

  path := 'tools' + DirectorySeparator + 'map-object-coords.png'; //unzip it first.

  bitmap.Init();
  AddOnTerminate(@bitmap.Free);
  bitmap.LoadFromFile(WL_WALKER_MAP.Replace('map.png', path));

  for c in bgrArray do
  begin
    tpa := [];
    bitmap.FindColors(tpa, c);
    atpa += tpa;
  end;

  for i := 0 to High(atpa) do
    WriteLn(OBJECT_NAMES[i], ', ', IntToHex(bgrArray[i]), ': ', atpa[i].ToString());
end.


(*
//Validate a coordinate if you want to be sure it's within a printed array:
{$I SRL-T/osr.simba}
{$I WaspLib/osr.simba}

var
  tpa: TPointArray = [];
  p : TPoint = [];

begin
  tpa := tpa.FilterBox(Box(p, 10, 10));

  WriteLn tpa <> [];
end.
*)
